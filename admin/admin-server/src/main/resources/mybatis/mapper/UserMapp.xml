<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.admin.server.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.github.admin.common.domain.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="userName"/>
        <result column="nickname" property="nickName"/>
        <result column="password" property="password"/>
        <result column="salt" property="salt"/>
        <result column="picture" property="picture"/>
        <result column="sex" property="sex"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="remark" property="remark"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
        <result column="status" property="status"/>
    </resultMap>

    <select id="findUserByUserName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select * from sys_user where username = #{userName}
    </select>
    <select id="findUserByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select * from sys_user where id = #{id}
    </select>
    <select id="findUserByPageCount" parameterType="map" resultType="java.lang.Long">
        select count(*) from sys_user
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="userName != null">
                and username like concat('%',#{userName},'%')
            </if>
            <if test="nickName != null">
                and nickname like concat('%',#{nickName},'%')
            </if>
        </where>
    </select>
    <select id="findUserByPageList" parameterType="map" resultMap="BaseResultMap">
        select * from sys_user
        <where>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="userName != null">
                and username like concat('%',#{userName},'%')
            </if>
            <if test="nickName != null">
                and nickname like concat('%',#{nickName},'%')
            </if>
        </where>
        <if test="orderByColumn != null and asc != null">
            order by ${orderByColumn} ${asc}
        </if>
            <if test="startIndex != null and endIndex != null">
                limit #{startIndex},#{endIndex}
            </if>
    </select>

    <insert id="insert">
        insert into sys_user(username,nickname,password,salt,picture,sex,phone,email,create_date,update_date,remark,status)
        values (#{userName},#{nickName},#{password},#{salt},#{picture},#{sex},#{phone},#{email},#{createDate},#{updateDate},#{remark},#{status})
    </insert>

    <update id="update">
        update sys_user
        <set>
            <if test="userName != null">
                username = #{userName},
            </if>
            <if test="nickName != null">
                nickname = #{nickName},
            </if>
            <if test="password != null">
                password = #{password},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="salt != salt">
                salt = #{salt},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteUserById" parameterType="long">
        delete from sys_user where id = #{id}
    </delete>

    <select id="findUserByUserIds" parameterType="java.util.List" resultMap="BaseResultMap">
        select * from sys_user
        <where>
            <if test="userIds != null">
                id in
                <foreach item="userId" index="index" collection="userIds"
                         open="(" separator="," close=")">
                    #{userId}
                </foreach>
            </if>
        </where>
    </select>
</mapper>


